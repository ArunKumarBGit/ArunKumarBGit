if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
   set fileencodings=utf-8,latin1
endif

set nocompatible	" Use Vim defaults (much better!)
syntax on
set showmatch
set showmode
set ic
set vb
set incsearch
set laststatus=2
set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l/%L:%c
" Make vim silent
set noerrorbells
set vb
" Tabs and indenting
set ts=4
set sw=4
set autoindent
set cindent
set smartindent
set expandtab
set smartcase
set textwidth=80    "Word wrap after 80 characters
syntax case match
set background=light

" backup
set backup
set backupdir=~/crisis_recovery

set tags=tags
set bs=2		" allow backspacing over everything in insert mode
"set ai			" always set autoindenting on
"set backup		" keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more
			" than 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time

" Emulating bash# to provide all files with same prefix
set wildmode=list:longest,full
set showmode               " display current mode
set showcmd                " show partilly typed commands

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " In text files, always limit the width of text to 78 characters
  autocmd BufRead *.txt set tw=78
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal! g'\"" |
  \ endif
endif

" if has("cscope")
"    set csprg=/usr/bin/cscope
"    set csto=0
"    set cst
"    set nocsverb
"    " add any database in current directory
"    if filereadable("cscope.out")
"       cs add cscope.out
"    " else add database pointed to by environment
"    elseif $CSCOPE_DB != ""
"       cs add $CSCOPE_DB
"    endif
"    set csverb
" endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

if &term=="xterm"
     set t_Co=8
     set t_Sb=[4%dm
     set t_Sf=[3%dm
endif

" Macro for cplink
function DefCo()
    let l:fn = bufname("%")
    let l:cmd = "ww --copy " . l:fn
    let l:res = system(l:cmd)
    echo l:res
    execute ":e"
endfunction
map cpl  :call DefCo()

